/configure policy-options { }
/configure policy-options { policy-statement "ebgp-in" }
/configure policy-options { policy-statement "ebgp-in" entry 10 }
/configure policy-options { policy-statement "ebgp-in" entry 10 action }
/configure policy-options { policy-statement "ebgp-in" entry 10 action action-type accept }
/configure policy-options { policy-statement "ebgp-out" }
/configure policy-options { policy-statement "ebgp-out" entry 10 }
/configure policy-options { policy-statement "ebgp-out" entry 10 action }
/configure policy-options { policy-statement "ebgp-out" entry 10 action action-type accept }
/configure policy-options { policy-statement "ibgp-in" }
/configure policy-options { policy-statement "ibgp-in" entry 10 }
/configure policy-options { policy-statement "ibgp-in" entry 10 from }
/configure policy-options { policy-statement "ibgp-in" entry 10 from protocol }
/configure policy-options { policy-statement "ibgp-in" entry 10 from protocol name [bgp] }
/configure policy-options { policy-statement "ibgp-in" entry 10 action }
/configure policy-options { policy-statement "ibgp-in" entry 10 action action-type accept }
/configure policy-options { policy-statement "ibgp-out" }
/configure policy-options { policy-statement "ibgp-out" entry 10 }
/configure policy-options { policy-statement "ibgp-out" entry 10 from }
/configure policy-options { policy-statement "ibgp-out" entry 10 from protocol }
/configure policy-options { policy-statement "ibgp-out" entry 10 from protocol name [bgp] }
/configure policy-options { policy-statement "ibgp-out" entry 10 action }
/configure policy-options { policy-statement "ibgp-out" entry 10 action action-type accept }
/configure policy-options { policy-statement "ibgp-out" entry 10 action next-hop 2.2.2.2 }
/configure port 1/1/c1 { }
/configure port 1/1/c1 { admin-state enable }
/configure port 1/1/c1 { connector }
/configure port 1/1/c1 { connector breakout c1-100g }
/configure port 1/1/c1/1 { }
/configure port 1/1/c1/1 { admin-state enable }
/configure port 1/1/c2 { }
/configure port 1/1/c2 { admin-state enable }
/configure port 1/1/c2 { connector }
/configure port 1/1/c2 { connector breakout c1-100g }
/configure port 1/1/c2/1 { }
/configure port 1/1/c2/1 { admin-state enable }
/configure port 1/1/c3 { }
/configure port 1/1/c3 { admin-state enable }
/configure port 1/1/c3 { connector }
/configure port 1/1/c3 { connector breakout c1-100g }
/configure port 1/1/c3/1 { }
/configure port 1/1/c3/1 { admin-state enable }
/configure router "Base" { }
/configure router "Base" { autonomous-system 65002 }
/configure router "Base" { router-id 10.0.2.1 }
/configure router "Base" { interface "lo65002" }
/configure router "Base" { interface "lo65002" admin-state disable }
/configure router "Base" { interface "lo65002" loopback }
/configure router "Base" { interface "lo65002" ipv4 }
/configure router "Base" { interface "lo65002" ipv4 primary }
/configure router "Base" { interface "lo65002" ipv4 primary address 2.2.2.2 }
/configure router "Base" { interface "lo65002" ipv4 primary prefix-length 32 }
/configure router "Base" { interface "system" }
/configure router "Base" { interface "system" admin-state enable }
/configure router "Base" { interface "system" ipv4 }
/configure router "Base" { interface "system" ipv4 primary }
/configure router "Base" { interface "system" ipv4 primary address 10.0.2.1 }
/configure router "Base" { interface "system" ipv4 primary prefix-length 32 }
/configure router "Base" { interface "to cs01" }
/configure router "Base" { interface "to cs01" admin-state enable }
/configure router "Base" { interface "to cs01" port 1/1/c1/1 }
/configure router "Base" { interface "to cs01" ipv4 }
/configure router "Base" { interface "to cs01" ipv4 primary }
/configure router "Base" { interface "to cs01" ipv4 primary address 65.0.0.2 }
/configure router "Base" { interface "to cs01" ipv4 primary prefix-length 30 }
/configure router "Base" { interface "to tcr01" }
/configure router "Base" { interface "to tcr01" admin-state enable }
/configure router "Base" { interface "to tcr01" port 1/1/c2/1 }
/configure router "Base" { interface "to tcr01" ipv4 }
/configure router "Base" { interface "to tcr01" ipv4 primary }
/configure router "Base" { interface "to tcr01" ipv4 primary address 172.23.0.0 }
/configure router "Base" { interface "to tcr01" ipv4 primary prefix-length 31 }
/configure router "Base" { interface "to tcr02" }
/configure router "Base" { interface "to tcr02" admin-state enable }
/configure router "Base" { interface "to tcr02" port 1/1/c3/1 }
/configure router "Base" { interface "to tcr02" ipv4 }
/configure router "Base" { interface "to tcr02" ipv4 primary }
/configure router "Base" { interface "to tcr02" ipv4 primary address 172.23.0.2 }
/configure router "Base" { interface "to tcr02" ipv4 primary prefix-length 31 }
/configure router "Base" { bgp }
/configure router "Base" { bgp router-id 10.0.2.1 }
/configure router "Base" { bgp group "ebgp" }
/configure router "Base" { bgp group "ebgp" type external }
/configure router "Base" { bgp group "ebgp" peer-as 65001 }
/configure router "Base" { bgp group "ebgp" family }
/configure router "Base" { bgp group "ebgp" family ipv4 true }
/configure router "Base" { bgp group "ebgp" import }
/configure router "Base" { bgp group "ebgp" import policy ["ebgp-in"] }
/configure router "Base" { bgp group "ebgp" export }
/configure router "Base" { bgp group "ebgp" export policy ["ebgp-out"] }
/configure router "Base" { bgp group "ibgp" }
/configure router "Base" { bgp group "ibgp" type internal }
/configure router "Base" { bgp group "ibgp" peer-as 65002 }
/configure router "Base" { bgp group "ibgp" local-address 10.0.2.1 }
/configure router "Base" { bgp group "ibgp" family }
/configure router "Base" { bgp group "ibgp" family ipv4 true }
/configure router "Base" { bgp group "ibgp" import }
/configure router "Base" { bgp group "ibgp" import policy ["ibgp-in"] }
/configure router "Base" { bgp group "ibgp" export }
/configure router "Base" { bgp group "ibgp" export policy ["ibgp-out"] }
/configure router "Base" { bgp neighbor "10.0.2.2" }
/configure router "Base" { bgp neighbor "10.0.2.2" group "ibgp" }
/configure router "Base" { bgp neighbor "10.0.2.3" }
/configure router "Base" { bgp neighbor "10.0.2.3" group "ibgp" }
/configure router "Base" { bgp neighbor "65.0.0.1" }
/configure router "Base" { bgp neighbor "65.0.0.1" group "ebgp" }
/configure router "Base" { isis 0 }
/configure router "Base" { isis 0 admin-state enable }
/configure router "Base" { isis 0 ipv4-routing true }
/configure router "Base" { isis 0 router-id 10.0.2.1 }
/configure router "Base" { isis 0 area-address [49.0002] }
/configure router "Base" { isis 0 interface "lo65002" }
/configure router "Base" { isis 0 interface "lo65002" admin-state enable }
/configure router "Base" { isis 0 interface "lo65002" passive true }
/configure router "Base" { isis 0 interface "lo65002" level 2 }
/configure router "Base" { isis 0 interface "system" }
/configure router "Base" { isis 0 interface "system" admin-state enable }
/configure router "Base" { isis 0 interface "system" passive true }
/configure router "Base" { isis 0 interface "system" level 2 }
/configure router "Base" { isis 0 interface "to tcr01" }
/configure router "Base" { isis 0 interface "to tcr01" admin-state enable }
/configure router "Base" { isis 0 interface "to tcr01" interface-type point-to-point }
/configure router "Base" { isis 0 interface "to tcr01" level 2 }
/configure router "Base" { isis 0 interface "to tcr02" }
/configure router "Base" { isis 0 interface "to tcr02" admin-state enable }
/configure router "Base" { isis 0 interface "to tcr02" interface-type point-to-point }
/configure router "Base" { isis 0 interface "to tcr02" level 2 }
/configure system { cron }
/configure system { cron schedule "cron_cond_adv" owner "admin" admin-state enable }
/configure system { cron schedule "cron_cond_adv" owner "admin" interval 60 }
/configure system { cron schedule "cron_cond_adv" owner "admin" type periodic }
/configure system { cron schedule "cron_cond_adv" owner "admin" script-policy name "cron_cond_adv" }
/configure system { cron schedule "cron_cond_adv" owner "admin" script-policy owner "admin" }
/configure system { script-control }
/configure system { script-control script-policy "cron_cond_adv" owner "admin" admin-state enable }
/configure system { script-control script-policy "cron_cond_adv" owner "admin" results "/null" }
/configure system { script-control script-policy "cron_cond_adv" owner "admin" python-script name "cron_cond_adv" }
/configure system { script-control script-policy "bgp_trans_policy" owner "admin" }
/configure system { script-control script-policy "bgp_trans_policy" owner "admin" admin-state enable }
/configure system { script-control script-policy "bgp_trans_policy" owner "admin" results "/null" }
/configure system { script-control script-policy "bgp_trans_policy" owner "admin" python-script }
/configure system { script-control script-policy "bgp_trans_policy" owner "admin" python-script name "ehs_cond_adv_script" }
/configure system { script-control script-policy "snmp_link_down_policy" owner "admin" }
/configure system { script-control script-policy "snmp_link_down_policy" owner "admin" admin-state enable }
/configure system { script-control script-policy "snmp_link_down_policy" owner "admin" results "/null" }
/configure system { script-control script-policy "snmp_link_down_policy" owner "admin" python-script }
/configure system { script-control script-policy "snmp_link_down_policy" owner "admin" python-script name "ehs_cond_adv_script" }
/configure system { script-control script-policy "snmp_link_up_policy" owner "admin" }
/configure system { script-control script-policy "snmp_link_up_policy" owner "admin" admin-state enable }
/configure system { script-control script-policy "snmp_link_up_policy" owner "admin" results "/null" }
/configure system { script-control script-policy "snmp_link_up_policy" owner "admin" python-script }
/configure system { script-control script-policy "snmp_link_up_policy" owner "admin" python-script name "ehs_cond_adv_script" }
/configure python { }
/configure python { python-script "cron_cond_adv" admin-state enable }
/configure python { python-script "cron_cond_adv" urls [ "tftp://172.31.255.29/scripts/cron_cond_adv.py" ] }
/configure python { python-script "cron_cond_adv" version python3 }
/configure python { python-script "ehs_cond_adv_script" }
/configure python { python-script "ehs_cond_adv_script" admin-state enable }
/configure python { python-script "ehs_cond_adv_script" urls ["tftp://172.31.255.29/scripts/ehs_cond_adv.py"] }
/configure python { python-script "ehs_cond_adv_script" version python3 }
/configure log { }
/configure log { log-events }
/configure log { log-events bgp event bgpBackwardTransNotification }
/configure log { log-events bgp event bgpBackwardTransNotification generate true }
/configure log { log-events snmp event linkDown }
/configure log { log-events snmp event linkDown generate true }
/configure log { log-events snmp event linkUp }
/configure log { log-events snmp event linkUp generate true }
/configure log { event-handling }
/configure log { event-handling handler "bgp_trans_handler" }
/configure log { event-handling handler "bgp_trans_handler" admin-state enable }
/configure log { event-handling handler "bgp_trans_handler" entry 10 }
/configure log { event-handling handler "bgp_trans_handler" entry 10 script-policy }
/configure log { event-handling handler "bgp_trans_handler" entry 10 script-policy name "bgp_trans_policy" }
/configure log { event-handling handler "bgp_trans_handler" entry 10 script-policy owner "admin" }
/configure log { event-handling handler "snmp_link_down_handler" }
/configure log { event-handling handler "snmp_link_down_handler" admin-state enable }
/configure log { event-handling handler "snmp_link_down_handler" entry 10 }
/configure log { event-handling handler "snmp_link_down_handler" entry 10 script-policy }
/configure log { event-handling handler "snmp_link_down_handler" entry 10 script-policy name "snmp_link_down_policy" }
/configure log { event-handling handler "snmp_link_down_handler" entry 10 script-policy owner "admin" }
/configure log { event-handling handler "snmp_link_up_handler" }
/configure log { event-handling handler "snmp_link_up_handler" admin-state enable }
/configure log { event-handling handler "snmp_link_up_handler" entry 10 }
/configure log { event-handling handler "snmp_link_up_handler" entry 10 script-policy }
/configure log { event-handling handler "snmp_link_up_handler" entry 10 script-policy name "snmp_link_up_policy" }
/configure log { event-handling handler "snmp_link_up_handler" entry 10 script-policy owner "admin" }
/configure log { event-trigger }
/configure log { event-trigger bgp event bgpBackwardTransNotification }
/configure log { event-trigger bgp event bgpBackwardTransNotification admin-state disable }
/configure log { event-trigger bgp event bgpBackwardTransNotification entry 10 }
/configure log { event-trigger bgp event bgpBackwardTransNotification entry 10 filter "bgp_trans_from_established" }
/configure log { event-trigger bgp event bgpBackwardTransNotification entry 10 handler "bgp_trans_handler" }
/configure log { event-trigger snmp event linkDown }
/configure log { event-trigger snmp event linkDown admin-state enable }
/configure log { event-trigger snmp event linkDown entry 10 }
/configure log { event-trigger snmp event linkDown entry 10 filter "snmp_link_down" }
/configure log { event-trigger snmp event linkDown entry 10 handler "snmp_link_down_handler" }
/configure log { event-trigger snmp event linkUp }
/configure log { event-trigger snmp event linkUp admin-state enable }
/configure log { event-trigger snmp event linkUp entry 10 }
/configure log { event-trigger snmp event linkUp entry 10 filter "snmp_link_up" }
/configure log { event-trigger snmp event linkUp entry 10 handler "snmp_link_up_handler" }
/configure log { filter "bgp_trans_from_established" }
/configure log { filter "bgp_trans_from_established" default-action drop }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" action forward }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" match }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" match message }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" match message eq "Peer 65.0.0.1: moved from higher state ESTABLISHED to lower state" }
/configure log { filter "bgp_trans_from_established" named-entry "bgp_trans_from_established" match message regexp true }
/configure log { filter "snmp_link_down" }
/configure log { filter "snmp_link_down" default-action drop }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" action forward }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match application }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match application eq snmp }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match message }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match message eq "Interface to cs01" }
/configure log { filter "snmp_link_down" named-entry "snmp_linkDown" match message regexp true }
/configure log { filter "snmp_link_up" }
/configure log { filter "snmp_link_up" default-action drop }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" action forward }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match application }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match application eq snmp }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match message }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match message eq "Interface to cs01" }
/configure log { filter "snmp_link_up" named-entry "snmp_linkUp" match message regexp true }